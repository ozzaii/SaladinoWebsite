import { ImageConfigComplete } from 'next/dist/shared/lib/image-config';
import { C as Config } from './getConfig-DeckzVDl.js';
import 'sharp';

type CacheImages = {
    output: string;
    hash: string;
}[];

type Manifest = {
    output: string;
    src: string;
    width: number;
    extension: string;
    externalUrl?: string;
}[];
type GetOptimizeResultProps = {
    imageBuffer: Buffer;
    destDir: string;
    noCache: boolean;
    cacheImages: CacheImages;
    cacheDir: string;
    cacheMeasurement: () => void;
    nonCacheMeasurement: () => void;
    errorMeasurement: () => void;
    pushInvalidFormatAssets: (asset: string) => void;
    cliProgressBarIncrement: () => void;
    originalFilePath: string;
    quality: number;
    sharpOptions?: Config['sharpOptions'];
} & Omit<Manifest[number], 'src'>;
type GetOptimizeResult = (getOptimizeResultProps: GetOptimizeResultProps) => Promise<void>;
declare const getOptimizeResult: GetOptimizeResult;
type OptimizeImagesProps = {
    manifestJsonPath: string;
    noCache: boolean;
    config: Config;
    nextImageConfig: ImageConfigComplete;
    terse?: boolean;
};
declare const optimizeImages: ({ manifestJsonPath, noCache, config, nextImageConfig, terse, }: OptimizeImagesProps) => Promise<void>;
type Run = (args: {
    noCache?: boolean;
}) => void;
declare const run: Run;

export { type Manifest, getOptimizeResult, optimizeImages, run };
